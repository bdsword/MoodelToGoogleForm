function getQuestions() {
  var questions = {};
  
  var isFirst = true;
  var folders  = DriveApp.getFoldersByName('AutoFormAssets');
  while (folders.hasNext()) {
    if (isFirst) {
      isFirst = false;
    } else {
      throw Error("There should be only one AutoFormAssets folder in your root.");
    }

    var folder = folders.next();
    var folderId = folder.getId();
    var folder = DriveApp.getFolderById(folderId);

    // Get meta data.
    var files = folder.getFilesByName('meta.csv');
    while (files.hasNext()) {
      var file = files.next();
      var data = file.getAs('text/csv').getDataAsString();
      var rows = data.split('\n');
      var header = rows[0].trim().split(',');
      var qNumIdx = header.indexOf('q_num');
      var choicesNumIdx = header.indexOf('choices_num');
      var answerChoiceIdsIdx = header.indexOf('answer');
      var scoreIdx = header.indexOf('score');
      for (var rowId = 1; rowId < rows.length; rowId++) {
        var row = rows[rowId].trim();
        if (row.length == 0) {
          continue;
        }
        var cols = row.split(',');

        var questionId = parseInt(cols[qNumIdx], 10);
        var choicesNum = parseInt(cols[choicesNumIdx], 10);
        var answerChoiceIds = cols[answerChoiceIdsIdx].split('_');
        for (var i = 0; i < answerChoiceIds.length; i++) {
          answerChoiceIds[i] = parseInt(answerChoiceIds[i], 10);
        }
        var score = parseInt(cols[scoreIdx], 10);
        questions[questionId] = {
          choicesNum: choicesNum,
          answerChoiceIds: answerChoiceIds,
          score: score,
        };
      }
    }

    // Get images blobs.
    var images = folder.searchFiles('mimeType = "image/png"');
    while (images.hasNext()) {
      var image = images.next();
      var imageName = image.getName();
      var questionId = parseInt(imageName.replace(/\.[^/.]+$/, ""), 10) + 1;  // Begin from 0.
      questions[questionId]['data'] = image.getBlob();
    }
  }
  return questions
}

function createForm() {
  var form = FormApp.create("AutoGeneratedForm");
  form.setIsQuiz(true);

  form.setProgressBar(true);

  var questions = getQuestions();
  var questionsNum = Object.keys(questions).length;

  form.addSectionHeaderItem().setTitle('基本資料');
  var itemNameInput = form.addTextItem();
  itemNameInput.setTitle("請輸入姓名：");
  itemNameInput.setRequired(true);
  
  for(var idx = 0; idx < questionsNum; idx++){
    var questionId = idx + 1;
    form.addPageBreakItem().setTitle('第' + questionId + '題');
    
    // Create a image
    var imageItem = form.addImageItem();
    imageItem.setImage(questions[questionId].data);

    var choicesNum = questions[questionId].choicesNum;
    var answerChoiceIds = questions[questionId].answerChoiceIds;
    var score = questions[questionId].score;
    var choiceItem;
    if(answerChoiceIds.length > 1){
      choiceItem = form.addCheckboxItem();
    }else{
      choiceItem = form.addMultipleChoiceItem();
    }
    choiceItem.setRequired(true);
    
    choiceItem.setTitle("第" + questionId + "題的答案是？");
    choiceItem.setPoints(score);

    var choices = [];
    for(var choiceId = 0; choiceId < choicesNum; choiceId++){
      var isAnswer = (answerChoiceIds.indexOf(choiceId + 1) !== -1);
      var choiceText = String.fromCharCode('A'.charCodeAt(0) + choiceId);
      choices.push(choiceItem.createChoice(choiceText, isAnswer));
    }
    choiceItem.setChoices(choices);
  }
  Logger.log('Published URL: ' + form.getPublishedUrl());
  Logger.log('Editor URL: ' + form.getEditUrl());
  return {'Published URL': form.getPublishedUrl(), 'Editor URL': form.getEditUrl()};
}
